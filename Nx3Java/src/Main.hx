package ;
import cx.FileTools;
import cx.java.SvgTranscoder;
import haxe.zip.Writer;
import haxe.zip.Writer;
import java.Lib;
import letters.Path;
import letters.targetJava.BasicJava;
import nx3.NHead;
import nx3.NNote;
import nx3.render.svg.SvgElements;
import nx3.render.TargetJFrame;
import nx3.test.Unittests;

import java.awt.Paint;
import java.awt.Graphics2D;
import java.awt.Shape;
import java.awt.geom.GeneralPath;
import java.awt.Color;
import javax.swing.JFrame;
import javax.swing.JPanel;
/*
import org.apache.batik.svggen.SVGGraphics2D;
import org.apache.batik.dom.svg.SAXSVGDocumentFactory;
*/
//import org.apache.batik.dom.GenericDOMImplementation;

//import org.w3c.dom.Document;
//import org.w3c.dom.DOMImplementation;

/*
 -java-lib batik-util.jar
-java-lib batik-svggen.jar
-java-lib batik-ext.jar
-java-lib batik-awt-util.jar
-java-lib batik-svg-dom.jar
-java-lib batik-dom.jar
*/
import java.io.File;
import java.io.Writer;
import java.io.InputStream;
import java.io.FileInputStream;
import java.io.StringWriter;
import java.io.StringBufferInputStream;
import java.io.FileWriter;
import java.io.BufferedWriter;
import com.btr.svg2java.java2d.SvgToJava2DTranscoder;
/**
 * ...
 * @author Jonas Nystr√∂m
 */
class Main extends TargetJFrame
{
	public static function main() 
	{
		//var svgString = '<svg xmlns="http://www.w3.org/2000/svg" ><g><path style="fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none" d="m 95.72971,266.7949 c -5.57504,2.79274 -12.48498,4.1891 -20.72511,4.1891 -9.69981,0 -18.99938,-1.66998 -27.91049,-5.00757 -8.90876,-3.33996 -16.75807,-7.86163 -23.54558,-13.56975 -6.78751,-5.70339 -12.24248,-12.38094 -16.36254,-20.03029 -4.12007,-7.64934 -6.1801,-15.78458 -6.1801,-24.40572 0,-29.26234 20.72746,-61.31506 62.18472,-96.1605 -1.3349,-5.34251 -2.33313,-10.74399 -2.99941,-16.209153 -0.66627,-5.460449 -1.00058,-11.107236 -1.00058,-16.938007 0,-8.010226 0.66392,-15.871864 1.99646,-23.582532 1.3302,-7.710668 3.23955,-14.935434 5.72336,-21.674325 2.48617,-6.738864 5.54208,-12.869193 9.17715,-18.393316 3.63272,-5.5265031 7.814,-10.1708424 12.53677,-13.9306366 16.47555,22.8253826 24.71097,44.6247216 24.71097,65.3862176 0,13.480109 -3.18069,26.321 -9.54442,38.522682 -6.36138,12.20404 -16.32959,24.07079 -29.90225,35.60967 l 7.99763,38.42834 c 4.36256,-0.35616 6.78751,-0.53307 7.2725,-0.53307 6.05767,0 11.72453,1.09209 16.99586,3.27863 5.27368,2.18418 9.88109,5.18919 13.82693,9.01269 3.94349,3.82349 7.07003,8.34517 9.37727,13.56502 2.30488,5.21986 3.4585,10.86193 3.46085,16.93329 -0.002,4.36836 -0.78869,8.68011 -2.36374,12.92581 -1.57504,4.25042 -3.814,8.28856 -6.72159,12.10969 -2.90994,3.82586 -6.36373,7.34272 -10.36137,10.55766 -3.99764,3.21965 -8.42141,5.98172 -13.26896,8.28856 0,-0.24294 0.18129,0.45523 0.54385,2.09218 0.36492,1.63932 0.8193,3.79048 1.36315,6.46291 0.5462,2.67008 1.18187,5.64443 1.90935,8.92306 0.72749,3.27626 1.36316,6.43224 1.90936,9.46556 0.5462,3.03568 1.02884,5.73878 1.45497,8.10222 0.42378,2.37052 0.63567,3.97681 0.63567,4.82595 0,5.70576 -1.21248,10.92561 -3.63508,15.65957 -2.42495,4.73396 -5.69746,8.80041 -9.81988,12.19933 -4.12006,3.39656 -8.90875,6.03833 -14.36136,7.9206 -5.45497,1.88226 -11.21364,2.82339 -17.27602,2.82339 -4.60506,0 -8.90641,-0.72885 -12.90875,-2.18654 -4,-1.45769 -7.515,-3.52157 -10.54502,-6.18929 -3.02765,-2.67244 -5.422,-5.91568 -7.18068,-9.73918 -1.75632,-3.82113 -2.63449,-8.03853 -2.63449,-12.64984 0,-3.27862 0.54621,-6.37563 1.63626,-9.2863 1.09005,-2.91066 2.60623,-5.39912 4.54384,-7.463 1.93996,-2.06389 4.3037,-3.7032 7.09122,-4.91323 2.78987,-1.21474 5.81989,-1.82329 9.09004,-1.82329 2.90994,0 5.63625,0.66988 8.18127,2.00492 2.54502,1.33503 4.72748,3.06634 6.54502,5.18919 1.81754,2.12521 3.27251,4.5547 4.36491,7.2861 1.09005,2.72905 1.63626,5.49111 1.63626,8.28384 0,6.31431 -2.33314,11.4752 -7.00176,15.48267 -4.66627,4.00512 -10.51205,6.37328 -17.54441,7.09976 5.57504,2.79509 11.329,4.19146 17.2666,4.1891 4.8452,0.002 9.57268,-0.87745 14.17773,-2.64177 4.6027,-1.75961 8.62859,-4.12777 12.08474,-7.10212 3.45379,-2.97436 6.24131,-6.43932 8.3602,-10.38547 2.11889,-3.94614 3.18069,-8.16354 3.18069,-12.65692 0,-1.70299 -0.18365,-3.58526 -0.54385,-5.64914 L 95.72971,266.7949 z M 95.18821,27.488123 c -1.21483,-0.243068 -2.30724,-0.365597 -3.27486,-0.365597 -3.75986,0 -7.24661,1.912917 -10.46026,5.738777 -3.21365,3.823478 -6.00352,8.80275 -8.36726,14.933079 -2.36374,6.132684 -4.21188,13.022518 -5.54914,20.671856 -1.33254,7.649365 -2.00117,15.298698 -2.00117,22.948042 0,3.158334 0.12478,6.194011 0.36492,9.10704 0.24485,2.91538 0.67333,5.70811 1.2831,8.37819 24.73216,-21.976242 37.09942,-41.768292 37.09942,-59.373819 0,-8.378205 -3.03237,-15.723276 -9.09475,-22.037568 z m 3.814,231.850857 c 5.94467,-4.37072 10.46026,-9.16837 13.55619,-14.39058 3.09123,-5.21986 4.63802,-10.86429 4.63802,-16.93801 0,-3.76216 -0.63802,-7.4347 -1.91171,-11.01996 -1.27134,-3.57818 -3.08887,-6.76718 -5.45497,-9.56227 -2.36609,-2.78801 -5.18657,-5.03588 -8.46143,-6.7318 -3.27486,-1.69828 -6.85108,-2.54506 -10.72865,-2.54506 -0.24249,0 -0.72749,0.0307 -1.45497,0.0873 -0.72513,0.0613 -1.75633,0.15097 -3.08887,0.2689 l 12.90639,60.83151 z M 81.56374,199.26225 c -3.75749,0.48354 -7.2725,1.42468 -10.545,2.82104 -3.27251,1.39637 -6.08828,3.12767 -8.45202,5.19155 -2.36374,2.06389 -4.24249,4.43205 -5.63625,7.10212 -1.39376,2.67244 -2.09064,5.58546 -2.09064,8.7438 0,9.34762 4.96527,17.11962 14.88874,23.31127 -8.24013,-1.33503 -14.84636,-4.52167 -19.81634,-9.56227 -4.96997,-5.03823 -7.45378,-11.38084 -7.45378,-19.03255 0,-4.49101 0.93937,-8.83106 2.81812,-13.02016 1.87875,-4.18909 4.39317,-7.95598 7.54325,-11.30065 3.15479,-3.34703 6.85108,-6.23647 11.09121,-8.66595 4.24249,-2.43421 8.72748,-4.13721 13.45261,-5.10664 l -7.63507,-36.42579 c -17.08768,12.86684 -30.02468,25.49546 -38.81101,37.88112 -8.78633,12.38567 -13.1795,24.64868 -13.1795,36.79139 0,6.67755 1.48322,12.99421 4.45438,18.94292 2.97115,5.95106 6.9735,11.14026 12.00469,15.5723 5.03119,4.4344 10.85107,7.92531 17.45966,10.47274 6.60623,2.55214 13.60563,3.82821 20.9982,3.82821 4.24249,0 8.18127,-0.39627 11.81634,-1.18408 3.63743,-0.79017 7.03001,-2.03558 10.1801,-3.73386 L 81.56374,199.26225 z" /> </g></svg>';
		/*
		var classCode = '';
		var fields = Reflect.fields(SvgElements);
		for (field in fields)
		{
			trace(field);
			var svgString:String  = cast Reflect.field(SvgElements, field);
			svgString  =  SvgTranscoder.addNamespace(svgString);
			try {
				var transcoder:SvgTranscoder = new SvgTranscoder(svgString);
				var classString = transcoder.toClassCode();
				var shapeCode = SvgTranscoder.extractShapeCode(classString);
				//trace(shapeCode);
				var procedureCode = SvgTranscoder.getShapeProcedureCode(shapeCode, field);
				trace(procedureCode);
				classCode += procedureCode + '\r\r';
				
			} catch (e:Dynamic)
			{
				trace(e);
			}
		}
		
		trace(fields);
		
		FileTools.saveContent('Elements.hx', classCode);
		*/
		
		var txt = FileTools.getContent('test.txt');
		trace(txt);
		
		
		/*
		var svgString = SvgElements.clefF;
		svgString = SvgTranscoder.addNamespace(svgString);
		trace(svgString);
		
		
		var transcoder:SvgTranscoder = new SvgTranscoder(svgString);
		var classString = transcoder.toClassCode();
		var shapeCode = SvgTranscoder.extractShapeCode(classString);
		//trace(shapeCode);
		var procedureCode = SvgTranscoder.getShapeProcedureCode(shapeCode, 'clefF');
		trace(procedureCode);
		*/
		
		new Main();
	}

	public function new() 
	{
		super();
		surface.paintFunction = function( g2D: Graphics2D ) 
		{            
			g2D.setColor( Color.BLACK );            
			g2D.fill(FontElements.testClef());			
			g2D.dispose();
		}
	}

}


//import static java.awt.Color.*;
//import static java.awt.MultipleGradientPaint.CycleMethod.*;
//import static java.awt.MultipleGradientPaint.ColorSpaceType.*;


class FontElements
{
	static public function getClefG():GeneralPath
	{
		var shape: GeneralPath = new GeneralPath();
		shape.moveTo(95.72971, 266.7949);
		shape.curveTo(90.15467, 269.58765, 83.244736, 270.98398, 75.00461, 270.98398);
		shape.curveTo(65.304794, 270.98398, 56.005226, 269.314, 47.094116, 265.9764);
		shape.curveTo(38.185356, 262.63644, 30.336046, 258.11478, 23.548536, 252.40666);
		shape.curveTo(16.761026, 246.70328, 11.306056, 240.02573, 7.185997, 232.37637);
		shape.curveTo(3.065927, 224.72704, 1.005897, 216.5918, 1.005897, 207.97066);
		shape.curveTo(1.005897, 178.70831, 21.733358, 146.6556, 63.190617, 111.81016);
		shape.curveTo(61.855717, 106.46765, 60.857487, 101.06617, 60.191208, 95.601006);
		shape.curveTo(59.524937, 90.14056, 59.190628, 84.49377, 59.190628, 78.662994);
		shape.curveTo(59.190628, 70.65277, 59.85455, 62.79113, 61.187088, 55.08046);
		shape.curveTo(62.51729, 47.369793, 64.426636, 40.145027, 66.910446, 33.406136);
		shape.curveTo(69.396614, 26.66727, 72.45253, 20.536942, 76.08759, 15.012819);
		shape.curveTo(79.720314, 9.486317, 83.901596, 4.841977, 88.62436, 1.0821829);
		shape.curveTo(105.09991, 23.907566, 113.33533, 45.706905, 113.33533, 66.4684);
		shape.curveTo(113.33533, 79.94851, 110.15464, 92.7894, 103.79091, 104.99108);
		shape.curveTo(97.42953, 117.19512, 87.46132, 129.06187, 73.88866, 140.60075);
		shape.lineTo(81.886284, 179.0291);
		shape.curveTo(86.24884, 178.67294, 88.6738, 178.49603, 89.15878, 178.49603);
		shape.curveTo(95.21645, 178.49603, 100.883316, 179.58812, 106.15464, 181.77466);
		shape.curveTo(111.42832, 183.95883, 116.03573, 186.96385, 119.98157, 190.78735);
		shape.curveTo(123.92506, 194.61084, 127.0516, 199.13252, 129.35884, 204.35237);
		shape.curveTo(131.66373, 209.57224, 132.81734, 215.2143, 132.81969, 221.28566);
		shape.curveTo(132.81769, 225.65402, 132.03099, 229.96577, 130.45595, 234.21147);
		shape.curveTo(128.8809, 238.4619, 126.641945, 242.50003, 123.73436, 246.32117);
		shape.curveTo(120.82442, 250.14703, 117.37063, 253.66388, 113.372986, 256.8788);
		shape.curveTo(109.37534, 260.09845, 104.95158, 262.86053, 100.10403, 265.1674);
		shape.curveTo(100.10403, 264.92444, 100.28532, 265.62262, 100.64788, 267.25958);
		shape.curveTo(101.0128, 268.8989, 101.46718, 271.05005, 102.01103, 273.7225);
		shape.curveTo(102.557236, 276.39258, 103.1929, 279.36694, 103.92038, 282.64557);
		shape.curveTo(104.64787, 285.9218, 105.28354, 289.07782, 105.82974, 292.1111);
		shape.curveTo(106.375946, 295.1468, 106.85858, 297.84988, 107.28471, 300.21335);
		shape.curveTo(107.708496, 302.58386, 107.92039, 304.19016, 107.92039, 305.0393);
		shape.curveTo(107.92039, 310.74506, 106.70791, 315.9649, 104.28531, 320.69888);
		shape.curveTo(101.86036, 325.43283, 98.587845, 329.4993, 94.46543, 332.89822);
		shape.curveTo(90.34537, 336.29477, 85.55668, 338.93655, 80.10407, 340.81882);
		shape.curveTo(74.6491, 342.70108, 68.890434, 343.6422, 62.828053, 343.6422);
		shape.curveTo(58.222992, 343.6422, 53.921642, 342.91336, 49.919304, 341.45566);
		shape.curveTo(45.919304, 339.99796, 42.404305, 337.93408, 39.374283, 335.26636);
		shape.curveTo(36.346634, 332.5939, 33.952282, 329.35068, 32.193604, 325.5272);
		shape.curveTo(30.437283, 321.70605, 29.559113, 317.48865, 29.559113, 312.87735);
		shape.curveTo(29.559113, 309.59872, 30.105322, 306.5017, 31.195374, 303.59106);
		shape.curveTo(32.285423, 300.6804, 33.801605, 298.19196, 35.739212, 296.12805);
		shape.curveTo(37.679173, 294.06415, 40.04291, 292.42487, 42.830433, 291.2148);
		shape.curveTo(45.620304, 290.00006, 48.650322, 289.3915, 51.92047, 289.3915);
		shape.curveTo(54.83041, 289.3915, 57.55672, 290.0614, 60.10174, 291.39642);
		shape.curveTo(62.646763, 292.73145, 64.82922, 294.46277, 66.64676, 296.5856);
		shape.curveTo(68.4643, 298.71082, 69.919266, 301.1403, 71.01167, 303.8717);
		shape.curveTo(72.10172, 306.60077, 72.647934, 309.36282, 72.647934, 312.15555);
		shape.curveTo(72.647934, 318.46985, 70.3148, 323.63074, 65.64617, 327.6382);
		shape.curveTo(60.9799, 331.64334, 55.13412, 334.0115, 48.10176, 334.73798);
		shape.curveTo(53.6768, 337.53308, 59.430763, 338.92944, 65.36836, 338.92706);
		shape.curveTo(70.21356, 338.92908, 74.94104, 338.04962, 79.54609, 336.28528);
		shape.curveTo(84.14879, 334.52567, 88.17468, 332.1575, 91.63083, 329.18317);
		shape.curveTo(95.08462, 326.2088, 97.87214, 322.74384, 99.99103, 318.7977);
		shape.curveTo(102.10992, 314.85156, 103.171715, 310.63416, 103.171715, 306.14078);
		shape.curveTo(103.171715, 304.43777, 102.98807, 302.5555, 102.62786, 300.49164);
		shape.lineTo(95.72971, 266.7949);
		shape.closePath();
		shape.moveTo(95.18821, 27.488123);
		shape.curveTo(93.97338, 27.245054, 92.88097, 27.122526, 91.91335, 27.122526);
		shape.curveTo(88.153496, 27.122526, 84.66674, 29.035442, 81.453094, 32.861305);
		shape.curveTo(78.23944, 36.684784, 75.44958, 41.664055, 73.08583, 47.794384);
		shape.curveTo(70.72209, 53.927067, 68.87395, 60.816902, 67.53669, 68.46624);
		shape.curveTo(66.20415, 76.11561, 65.53552, 83.76494, 65.53552, 91.41428);
		shape.curveTo(65.53552, 94.57262, 65.6603, 97.60829, 65.900444, 100.521324);
		shape.curveTo(66.145294, 103.43671, 66.57378, 106.22943, 67.18354, 108.89951);
		shape.curveTo(91.9157, 86.92327, 104.28296, 67.131226, 104.28296, 49.525696);
		shape.curveTo(104.28296, 41.14749, 101.25059, 33.80242, 95.18821, 27.488129);
		shape.closePath();
		shape.moveTo(99.00221, 259.339);
		shape.curveTo(104.946884, 254.96826, 109.46247, 250.17062, 112.5584, 244.94841);
		shape.curveTo(115.649635, 239.72855, 117.19643, 234.08412, 117.19643, 228.0104);
		shape.curveTo(117.19643, 224.24825, 116.5584, 220.57571, 115.28471, 216.99045);
		shape.curveTo(114.013374, 213.41226, 112.19585, 210.22327, 109.82974, 207.42818);
		shape.curveTo(107.46365, 204.64017, 104.64317, 202.3923, 101.36832, 200.69638);
		shape.curveTo(98.09346, 198.99811, 94.517235, 198.15132, 90.63966, 198.15132);
		shape.curveTo(90.39717, 198.15132, 89.91217, 198.18202, 89.18469, 198.23862);
		shape.curveTo(88.459564, 198.29991, 87.42836, 198.38959, 86.095825, 198.50752);
		shape.lineTo(99.00221, 259.33902);
		shape.closePath();
		shape.moveTo(81.56374, 199.26225);
		shape.curveTo(77.80625, 199.74579, 74.291245, 200.68694, 71.018745, 202.0833);
		shape.curveTo(67.74624, 203.47968, 64.930466, 205.21097, 62.566727, 207.27484);
		shape.curveTo(60.202988, 209.33873, 58.324238, 211.7069, 56.930477, 214.37697);
		shape.curveTo(55.536716, 217.04941, 54.839836, 219.96243, 54.839836, 223.12077);
		shape.curveTo(54.839836, 232.4684, 59.805107, 240.24039, 69.72858, 246.43204);
		shape.curveTo(61.488445, 245.097, 54.882217, 241.91037, 49.91224, 236.86977);
		shape.curveTo(44.94227, 231.83154, 42.458458, 225.48892, 42.458458, 217.83722);
		shape.curveTo(42.458458, 213.3462, 43.397827, 209.00616, 45.276577, 204.81706);
		shape.curveTo(47.155327, 200.62798, 49.669746, 196.86108, 52.819828, 193.51642);
		shape.curveTo(55.974617, 190.16939, 59.670906, 187.27995, 63.911037, 184.85046);
		shape.curveTo(68.15353, 182.41626, 72.63852, 180.71326, 77.36365, 179.74382);
		shape.lineTo(69.72858, 143.31802);
		shape.curveTo(52.640896, 156.18486, 39.703896, 168.81348, 30.917568, 181.19914);
		shape.curveTo(22.131237, 193.58481, 17.738068, 205.84782, 17.738068, 217.99054);
		shape.curveTo(17.738068, 224.66809, 19.221287, 230.98476, 22.192448, 236.93346);
		shape.curveTo(25.163597, 242.88452, 29.165947, 248.07372, 34.197136, 252.50575);
		shape.curveTo(39.228325, 256.94016, 45.048206, 260.43106, 51.656796, 262.9785);
		shape.curveTo(58.263023, 265.53064, 65.26243, 266.8067, 72.655, 266.8067);
		shape.curveTo(76.89749, 266.8067, 80.836266, 266.41043, 84.47134, 265.62262);
		shape.curveTo(88.108765, 264.83246, 91.50134, 263.58704, 94.651436, 261.88876);
		shape.lineTo(81.56374, 199.26225);
		shape.closePath();
		
		return shape;
	}
	
	static public function testClef():GeneralPath 
	{
		var shape0: GeneralPath = new GeneralPath();
		shape0.moveTo(95.72971, 266.7949);
		shape0.curveTo(90.15467, 269.58765, 83.244736, 270.98398, 75.00461, 270.98398);
		shape0.curveTo(65.304794, 270.98398, 56.005226, 269.314, 47.094116, 265.9764);
		shape0.curveTo(38.185356, 262.63644, 30.336046, 258.11478, 23.548536, 252.40666);
		shape0.curveTo(16.761026, 246.70328, 11.306056, 240.02573, 7.185997, 232.37637);
		shape0.curveTo(3.065927, 224.72704, 1.005897, 216.5918, 1.005897, 207.97066);
		shape0.curveTo(1.005897, 178.70831, 21.733358, 146.6556, 63.190617, 111.81016);
		shape0.curveTo(61.855717, 106.46765, 60.857487, 101.06617, 60.191208, 95.601006);
		shape0.curveTo(59.524937, 90.14056, 59.190628, 84.49377, 59.190628, 78.662994);
		shape0.curveTo(59.190628, 70.65277, 59.85455, 62.79113, 61.187088, 55.08046);
		shape0.curveTo(62.51729, 47.369793, 64.426636, 40.145027, 66.910446, 33.406136);
		shape0.curveTo(69.396614, 26.66727, 72.45253, 20.536942, 76.08759, 15.012819);
		shape0.curveTo(79.720314, 9.486317, 83.901596, 4.841977, 88.62436, 1.0821829);
		shape0.curveTo(105.09991, 23.907566, 113.33533, 45.706905, 113.33533, 66.4684);
		shape0.curveTo(113.33533, 79.94851, 110.15464, 92.7894, 103.79091, 104.99108);
		shape0.curveTo(97.42953, 117.19512, 87.46132, 129.06187, 73.88866, 140.60075);
		shape0.lineTo(81.886284, 179.0291);
		shape0.curveTo(86.24884, 178.67294, 88.6738, 178.49603, 89.15878, 178.49603);
		shape0.curveTo(95.21645, 178.49603, 100.883316, 179.58812, 106.15464, 181.77466);
		shape0.curveTo(111.42832, 183.95883, 116.03573, 186.96385, 119.98157, 190.78735);
		shape0.curveTo(123.92506, 194.61084, 127.0516, 199.13252, 129.35884, 204.35237);
		shape0.curveTo(131.66373, 209.57224, 132.81734, 215.2143, 132.81969, 221.28566);
		shape0.curveTo(132.81769, 225.65402, 132.03099, 229.96577, 130.45595, 234.21147);
		shape0.curveTo(128.8809, 238.4619, 126.641945, 242.50003, 123.73436, 246.32117);
		shape0.curveTo(120.82442, 250.14703, 117.37063, 253.66388, 113.372986, 256.8788);
		shape0.curveTo(109.37534, 260.09845, 104.95158, 262.86053, 100.10403, 265.1674);
		shape0.curveTo(100.10403, 264.92444, 100.28532, 265.62262, 100.64788, 267.25958);
		shape0.curveTo(101.0128, 268.8989, 101.46718, 271.05005, 102.01103, 273.7225);
		shape0.curveTo(102.557236, 276.39258, 103.1929, 279.36694, 103.92038, 282.64557);
		shape0.curveTo(104.64787, 285.9218, 105.28354, 289.07782, 105.82974, 292.1111);
		shape0.curveTo(106.375946, 295.1468, 106.85858, 297.84988, 107.28471, 300.21335);
		shape0.curveTo(107.708496, 302.58386, 107.92039, 304.19016, 107.92039, 305.0393);
		shape0.curveTo(107.92039, 310.74506, 106.70791, 315.9649, 104.28531, 320.69888);
		shape0.curveTo(101.86036, 325.43283, 98.587845, 329.4993, 94.46543, 332.89822);
		shape0.curveTo(90.34537, 336.29477, 85.55668, 338.93655, 80.10407, 340.81882);
		shape0.curveTo(74.6491, 342.70108, 68.890434, 343.6422, 62.828053, 343.6422);
		shape0.curveTo(58.222992, 343.6422, 53.921642, 342.91336, 49.919304, 341.45566);
		shape0.curveTo(45.919304, 339.99796, 42.404305, 337.93408, 39.374283, 335.26636);
		shape0.curveTo(36.346634, 332.5939, 33.952282, 329.35068, 32.193604, 325.5272);
		shape0.curveTo(30.437283, 321.70605, 29.559113, 317.48865, 29.559113, 312.87735);
		shape0.curveTo(29.559113, 309.59872, 30.105322, 306.5017, 31.195374, 303.59106);
		shape0.curveTo(32.285423, 300.6804, 33.801605, 298.19196, 35.739212, 296.12805);
		shape0.curveTo(37.679173, 294.06415, 40.04291, 292.42487, 42.830433, 291.2148);
		shape0.curveTo(45.620304, 290.00006, 48.650322, 289.3915, 51.92047, 289.3915);
		shape0.curveTo(54.83041, 289.3915, 57.55672, 290.0614, 60.10174, 291.39642);
		shape0.curveTo(62.646763, 292.73145, 64.82922, 294.46277, 66.64676, 296.5856);
		shape0.curveTo(68.4643, 298.71082, 69.919266, 301.1403, 71.01167, 303.8717);
		shape0.curveTo(72.10172, 306.60077, 72.647934, 309.36282, 72.647934, 312.15555);
		shape0.curveTo(72.647934, 318.46985, 70.3148, 323.63074, 65.64617, 327.6382);
		shape0.curveTo(60.9799, 331.64334, 55.13412, 334.0115, 48.10176, 334.73798);
		shape0.curveTo(53.6768, 337.53308, 59.430763, 338.92944, 65.36836, 338.92706);
		shape0.curveTo(70.21356, 338.92908, 74.94104, 338.04962, 79.54609, 336.28528);
		shape0.curveTo(84.14879, 334.52567, 88.17468, 332.1575, 91.63083, 329.18317);
		shape0.curveTo(95.08462, 326.2088, 97.87214, 322.74384, 99.99103, 318.7977);
		shape0.curveTo(102.10992, 314.85156, 103.171715, 310.63416, 103.171715, 306.14078);
		shape0.curveTo(103.171715, 304.43777, 102.98807, 302.5555, 102.62786, 300.49164);
		shape0.lineTo(95.72971, 266.7949);
		shape0.closePath();
		shape0.moveTo(95.18821, 27.488123);
		shape0.curveTo(93.97338, 27.245054, 92.88097, 27.122526, 91.91335, 27.122526);
		shape0.curveTo(88.153496, 27.122526, 84.66674, 29.035442, 81.453094, 32.861305);
		shape0.curveTo(78.23944, 36.684784, 75.44958, 41.664055, 73.08583, 47.794384);
		shape0.curveTo(70.72209, 53.927067, 68.87395, 60.816902, 67.53669, 68.46624);
		shape0.curveTo(66.20415, 76.11561, 65.53552, 83.76494, 65.53552, 91.41428);
		shape0.curveTo(65.53552, 94.57262, 65.6603, 97.60829, 65.900444, 100.521324);
		shape0.curveTo(66.145294, 103.43671, 66.57378, 106.22943, 67.18354, 108.89951);
		shape0.curveTo(91.9157, 86.92327, 104.28296, 67.131226, 104.28296, 49.525696);
		shape0.curveTo(104.28296, 41.14749, 101.25059, 33.80242, 95.18821, 27.488129);
		shape0.closePath();
		shape0.moveTo(99.00221, 259.339);
		shape0.curveTo(104.946884, 254.96826, 109.46247, 250.17062, 112.5584, 244.94841);
		shape0.curveTo(115.649635, 239.72855, 117.19643, 234.08412, 117.19643, 228.0104);
		shape0.curveTo(117.19643, 224.24825, 116.5584, 220.57571, 115.28471, 216.99045);
		shape0.curveTo(114.013374, 213.41226, 112.19585, 210.22327, 109.82974, 207.42818);
		shape0.curveTo(107.46365, 204.64017, 104.64317, 202.3923, 101.36832, 200.69638);
		shape0.curveTo(98.09346, 198.99811, 94.517235, 198.15132, 90.63966, 198.15132);
		shape0.curveTo(90.39717, 198.15132, 89.91217, 198.18202, 89.18469, 198.23862);
		shape0.curveTo(88.459564, 198.29991, 87.42836, 198.38959, 86.095825, 198.50752);
		shape0.lineTo(99.00221, 259.33902);
		shape0.closePath();
		shape0.moveTo(81.56374, 199.26225);
		shape0.curveTo(77.80625, 199.74579, 74.291245, 200.68694, 71.018745, 202.0833);
		shape0.curveTo(67.74624, 203.47968, 64.930466, 205.21097, 62.566727, 207.27484);
		shape0.curveTo(60.202988, 209.33873, 58.324238, 211.7069, 56.930477, 214.37697);
		shape0.curveTo(55.536716, 217.04941, 54.839836, 219.96243, 54.839836, 223.12077);
		shape0.curveTo(54.839836, 232.4684, 59.805107, 240.24039, 69.72858, 246.43204);
		shape0.curveTo(61.488445, 245.097, 54.882217, 241.91037, 49.91224, 236.86977);
		shape0.curveTo(44.94227, 231.83154, 42.458458, 225.48892, 42.458458, 217.83722);
		shape0.curveTo(42.458458, 213.3462, 43.397827, 209.00616, 45.276577, 204.81706);
		shape0.curveTo(47.155327, 200.62798, 49.669746, 196.86108, 52.819828, 193.51642);
		shape0.curveTo(55.974617, 190.16939, 59.670906, 187.27995, 63.911037, 184.85046);
		shape0.curveTo(68.15353, 182.41626, 72.63852, 180.71326, 77.36365, 179.74382);
		shape0.lineTo(69.72858, 143.31802);
		shape0.curveTo(52.640896, 156.18486, 39.703896, 168.81348, 30.917568, 181.19914);
		shape0.curveTo(22.131237, 193.58481, 17.738068, 205.84782, 17.738068, 217.99054);
		shape0.curveTo(17.738068, 224.66809, 19.221287, 230.98476, 22.192448, 236.93346);
		shape0.curveTo(25.163597, 242.88452, 29.165947, 248.07372, 34.197136, 252.50575);
		shape0.curveTo(39.228325, 256.94016, 45.048206, 260.43106, 51.656796, 262.9785);
		shape0.curveTo(58.263023, 265.53064, 65.26243, 266.8067, 72.655, 266.8067);
		shape0.curveTo(76.89749, 266.8067, 80.836266, 266.41043, 84.47134, 265.62262);
		shape0.curveTo(88.108765, 264.83246, 91.50134, 263.58704, 94.651436, 261.88876);
		shape0.lineTo(81.56374, 199.26225);
		shape0.closePath();
		return shape0;
		//g.setPaint(new Color(0, 0, 0, 255));
		//g.fill(shape0);
	}
	
	
	}